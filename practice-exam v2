#!/usr/bin/env python3

def q1(sentence):
    '''
    Given a string of multiple words separated by single spaces,
    return a new string with the sentence reversed. The words
    themselves should remain as they are. For example, given
    'it is accepted as a masterpiece on strategy', the returned
    string should be 'strategy on masterpiece a as accepted is it'.
    '''
    i = sentence.split()
    i.reverse()
    q = " ".join(i)
    return q

    pass

def q2(n):
    '''
    Given a positive integer, return its string representation with
    commas seperating groups of 3 digits. For example, given 65535
    the returned string should be '65,535'.
    '''
    return '{:n}'.format(n)
    pass

def q3(lst0, lst1):
    '''
    Given two lists of integers, return a sorted list that contains
    all integers from both lists in descending order. For example,
    given [3,4,9] and [8,1,5] the returned list should be [9,8,5,4,3,1].
    The returned list may contain duplicates.
    '''
    nlist = []
    for i in lst0:
        nlist.append(i)
    for i in lst1:
        nlist.append(i)
    nlist = sorted(nlist)
    nlist.reverse()
    return nlist
    pass

def q4(s1,s2,s3):
    '''
    Given 3 scores in the range [0-100] inclusive, return 'GO' if
    the average score is greater than 50. Otherwise return 'NOGO'.
    '''
    e = s1 + s2 + s3
    if e/3 > 50:
        return "GO"
    else:
        return "NOGO"
    pass

def q5(integer, limit):
    '''
    Given an integer and limit, return a list of even multiples of the
    integer up to and including the limit. For example, if integer==3 and
    limit==30, the returned list should be [0,6,12,18,24,30]. Note, 0 is
    a multiple of any integer except 0 itself.
    '''
    nelist = []
    for x in range(0,(limit +1),3):
        if x % 2 == 0:
            nelist.append(x)

    return nelist
    pass

